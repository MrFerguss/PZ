1)сколько систем контроля вверсий существует?
- Только Git
-Git и SVN
-Git и CVS
-Много*

2)Что такое репозиторий Git&
-Любая дериктория/папка в моей ОС
-Любая папка, находящаяся внутри Git
-Репозиторий Git предствляет собой каталог файловой системы, в котором находящиеся файлы конфигурации репозитория,файлы журналов,хранящие операции, 
выполняемые над репозиторием, индекс, описывающий расположение файлов, и хранилище, содержащее собственно файлы.*
-Папка .git/ и все входящие в нее

3)Что делает команда git add?
-Создает файл с указанным именем и сразу добавляет его в Git.
-Добавляет локальный файл в удалённый репозиторий так, чтобы другие участники проекта могли его видеть.
-Начинает отслеживать указанный файл или айлы.*

4)Что озачает статус файла new в выводе команды git status? 
-Что файл только что был создан и еще не отслеживается системой Git
-Что файл только наал отслеживаться Git  и пока не имеет истории*
-Что файл удаляли из Git и потом восстановили командой git return
-Такого сатуса нет, есть только статус deleted file

5)Что такое коммит? 
-Это единица состояния проекта в Git*
-Это результат вывода команды git diff
-Это обобщающее название одного из статусов файла в выводе git status:untracked,new,deleted, или modified
-Это слово ничего не означает, его ввели только для того, что бы путать новичков

6)В какой ситуации надо делать git status?
-Чем чаще, тем лучше
-Всегда при создании коммита
-Всегда после команды git pull
-Только если надо узнать, в каком статусе находиться репозиторий, а так эта команда не является оббязательной для любой манипуляции*

7)Чем отличается master и origin master?
-Это просто два разных названия одной ветки
-master принадлежит локальному репозитори, а origin master-удаленному*
-Это две разные ветки локального репозитория
-Ветки origin master не существует

8)Что делает команда git log? 
-Пишет указанный после файла в лог
-Такой команды нет, есть только команда git look
-Показывает историю коммитов*
-Удаляет файлы из репозитория 

9)Как узнать, кто автор строчки в файле, используя систему Git?
-Команда git show --author
-Команда git commit --author
-Команда git blame*
-Команда git status

10)Как отменить действие команды git add на файл? 
-Команда git abort
-Команда git stash
-команда git not-add
-Команда git reset*

11)Как привести измененный файл в начальное состояние (до изменения)?
-Команда git abort path/to/file
-Команда git checkout path/to/file*
-Команда  git pull /path/to/file
-Команда git commit path/to/file

12)Как отменить слияние веток, если произошел конфликт?
-Команда git stash pop
-Команда git merge --abort*
-Команда git remove repository
-Команда git clean

13)Сколько всего веток может быть в репозитории? 
-Сколько угодно*
-Это число настраивается в конфиге
-Не больше двх
-Столько же, сколько в проекте

14)Что делает команда git branch без какого-либо параметра?
-Переключится на последнюю используемую ветку
-Выведет ошибку 
-Выведет список локальных веток*
-Выведет список удаленных(remote) веток

15)Как удалить локальную ветку my_branch?
-Команда:git delet branch my_branch
-Команда: git branch -D my_branch*
-Команда:git reset my_branch
-Никак, Git как раз существует для того чтобы никакие изменения нельзя было удалить

16)Что такое слияние двух веток? 
-Когда одну ветку переименовывают в другую
-Когда все коммиты, сделанные для одной ветки, становятся видны во второй*
-Когда выполнили команду git fetch
-Когда у двух веток скоро появится третья, поменьше, но имеющая признаки обоих родительских веток





Где * там правильный ответ
